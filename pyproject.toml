[build-system]
requires = ["hatchling>=1.5.0", "hatch-nodejs-version>=0.3.2"]
build-backend = "hatchling.build"

[project]
name = "fileglancer"
readme = "README.md"
authors = [
    { name = "Allison Truhlar", email = "truhlara@janelia.hhmi.org" },
    { name = "Jody Clements", email = "clementsj@janelia.hhmi.org" },
    { name = "Cristian Goina", email = "goinac@janelia.hhmi.org" },
    { name = "Konrad Rokicki", email = "rokickik@janelia.hhmi.org" }
]
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version", "description", "urls", "keywords"]
dependencies = [
    "fastapi >=0.115",
    "uvicorn >=0.34",
    "sqlalchemy >=2.0",
    "aiosqlite >=0.21.0",
    "alembic >=1.13.0",
    "pandas >=2.2.3",
    "pydantic >=2.10",
    "pydantic-settings >=2.8",
    "loguru >=0.7.2",
    "atlassian-python-api >=3.41",
    "lxml >=5.3.1",
    "x2s3 >=0.9.1",
    "psycopg2-binary >=2.9.9,<3",
    "cachetools >=5.0.0",
    "authlib >=1.3.0",
    "httpx >=0.28",
    "itsdangerous >=2.1.2",
    "click >=8.0"
]

[project.scripts]
fileglancer = "fileglancer.cli:cli"

[project.optional-dependencies]
test = [
    "coverage",
    "httpx >=0.28",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-html",
    "requests-mock"
]
release = [
    "twine",
    "hatch"
]

[tool.hatch.version]
source = "nodejs"
path = "frontend/package.json"

[tool.hatch.metadata.hooks.nodejs]
path = "frontend/package.json"
fields = ["description", "urls", "keywords"]

[tool.hatch.build.targets.sdist]
artifacts = [
  "fileglancer/ui",
  "fileglancer/alembic.ini",
  "fileglancer/alembic/**/*"
]
exclude = [".github"]

[tool.hatch.build.targets.wheel]
artifacts = [
  "fileglancer/ui",
  "fileglancer/alembic.ini",
  "fileglancer/alembic/**/*"
]

[tool.hatch.build.hooks.version]
path = "fileglancer/_version.py"

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64"]

[tool.pixi.feature.test.tasks]
test-pip-install = "pip install -e ."
test-backend = { cmd = "pytest --cov=fileglancer --cov-report=html --cov-report=term", depends-on = ["test-pip-install"] }
test-frontend = "cd frontend && npm test"

[tool.pixi.feature.test.dependencies]
coverage = ">=7.10.6,<8"
pytest = ">=8.4.2,<9"
pytest-asyncio = ">=1.1.0,<2"
pytest-cov = ">=7.0.0,<8"
pytest-jupyter = ">=0.10.1,<0.11"
requests-mock = ">=1.12.1,<2"
pytest-jupyter-server = ">=0.6.0"

[tool.pixi.feature.release.tasks]
version = "hatch version"
pypi-build = "pip install build && python -m build"
pypi-upload = "twine upload dist/*"

[tool.pixi.feature.release.dependencies]
twine = ">=6.2.0,<7"
hatch = ">=1.14.1,<2"

[tool.pixi.environments]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
release = { features = ["release"], solve-group = "default" }

[tool.pixi.tasks]
pip-install = { cmd = "pixi reinstall fileglancer" }
pip-uninstall = { cmd = "pixi clean" }
node-install = "cd frontend && npm install"
node-build = { cmd = "cd frontend && npm run build", depends-on = ["node-install"] }
node-eslint-check = "cd frontend && npx eslint . --cache --ext .ts,.tsx"
node-eslint-write = "cd frontend && npx eslint . --cache --fix --ext .ts,.tsx"
node-prettier-check =  "cd frontend && npx prettier \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md}\" \"!package-lock.json\" --check"
node-prettier-write = "cd frontend && npx prettier --list-different --write '**/*.{ts,tsx,js,jsx,json,md}' '!package-lock.json'"
node-check = "cd frontend && npx tsc --noEmit -p tsconfig.app.json"
node-install-ui-tests = "npm --prefix frontend/ui-tests install"
test-ui = { cmd = "npm --prefix frontend/ui-tests run test ", depends-on = ["node-install-ui-tests"] }
test-launch = "pixi run uvicorn fileglancer.app:app --no-access-log --port 7879"
dev-install = { depends-on = ["node-build", "pip-install"] }
dev-watch = { cmd = "cd frontend && NODE_ENV=development npm run watch" }
dev-launch = "pixi run uvicorn fileglancer.app:app --no-access-log --port 7878 --reload"
dev-launch-remote = "pixi run uvicorn fileglancer.app:app --no-access-log --host 0.0.0.0 --port 7878 --reload --ssl-keyfile /opt/certs/cert.key --ssl-certfile /opt/certs/cert.crt"
dev-launch-secure = "python fileglancer/dev_launch.py"
migrate = "alembic upgrade head"
migrate-create = "alembic revision --autogenerate"
stamp-db = "python -m fileglancer.stamp_db"

[tool.pixi.dependencies]
python = ">=3.13.2,<4"
pip = ">=25.0.1,<26"
nodejs = ">=22.12.0,<23"
pydantic = ">=2.10.6,<3"
fastapi = ">=0.119.1,<0.120"
uvicorn = ">=0.38.0,<0.39"
sqlalchemy = ">=2.0.44,<3"
aiosqlite = ">=0.21.0,<0.22"
alembic = ">=1.17.0,<2"
pandas = ">=2.3.3,<3"
loguru = ">=0.7.3,<0.8"
atlassian-python-api = ">=4.0.7,<5"
aiobotocore = ">=2.25.0,<3"
boto3 = ">=1.40.49,<2"
rsa = ">=4.9.1,<5"
pydantic-settings = ">=2.11.0,<3"
pydantic-yaml = ">=1.6.0,<2"
authlib = ">=1.6.5,<2"
cachetools = ">=6.2.1,<7"
itsdangerous = ">=2.2.0,<3"
python-jose = ">=3.5.0,<4"
python-jose-cryptodome = ">=1.3.2,<2"
psycopg2-binary = ">=2.9.10,<3"

[tool.pixi.pypi-dependencies]
fileglancer = { path = ".", editable = true }

[dependency-groups]
release = ["build>=1.3.0,<2"]
